<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hangyan.redis_study.Mapper.CourseMapper">

    <select id="SelectAll" resultType="com.hangyan.redis_study.model.Course">
            select * from Course
    </select>
    
    
    <select id="getCourseInfo" resultType="com.hangyan.redis_study.model.Course" parameterType="java.lang.String">

        select * from Course
        where c_id=#{id}

    </select>

    <select id="SelectById" parameterType="com.hangyan.redis_study.model.Course" resultType="com.hangyan.redis_study.model.Course">
        select * from Course
        <where>
            <!--
                  collection:指定输入对象中的集合属性,传递的是对象Course类，c_ids是Course的成员变量，c_id是自己在测试额外写的
                  open中的c_id是数据库的
                  item:每次遍历生成的对象，自己定义的，但是要保证与 #{c_id}的c_id一致
                  open:开始遍历时的拼接字符串
                  close:结束时拼接的字符串
                  separator:遍历对象之间需要拼接的字符串
                  select * from user where 1=1 and id in (1,2,3)

                -->
            <foreach collection="c_ids" item="c_id" open="c_id in (" close=")" separator=",">
                #{c_id}
            </foreach>
        </where>


    </select>

    <delete id="deleteById" parameterType="java.lang.String">
        delete from course
        where c_id=#{id}

    </delete>
    <update id="update">
        UPDATE course
        set t_id=#{t_id,jdbcType=VARCHAR}
        where c_id =#{c_id,jdbcType=VARCHAR}
    </update>

    <insert id="Insert" >
        insert  into Course(c_id,c_name,t_id)
        values (#{c_id,jdbcType=VARCHAR},#{c_name,jdbcType=VARCHAR},#{t_id,jdbcType=VARCHAR})
    </insert>
</mapper>
